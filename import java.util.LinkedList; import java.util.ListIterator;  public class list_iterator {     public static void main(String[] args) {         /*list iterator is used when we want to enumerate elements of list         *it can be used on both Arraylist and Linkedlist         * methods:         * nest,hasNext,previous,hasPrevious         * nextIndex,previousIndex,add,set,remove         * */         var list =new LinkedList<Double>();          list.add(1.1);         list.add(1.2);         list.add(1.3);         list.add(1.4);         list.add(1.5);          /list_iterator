import java.util.LinkedList;
import java.util.ListIterator;

public class import java.util.LinkedList;
import java.util.ListIterator;

public class list_iterator {
    public static void main(String[] args) {
        /*list iterator is used when we want to enumerate elements of list
        *it can be used on both Arraylist and Linkedlist
        * methods:
        * nest,hasNext,previous,hasPrevious
        * nextIndex,previousIndex,add,set,remove
        * */
        var list =new LinkedList<Double>();

        list.add(1.1);
        list.add(1.2);
        list.add(1.3);
        list.add(1.4);
        list.add(1.5);

        //reversing the list
        ListIterator itr1=list.listIterator(list.size());

        while (itr1.hasPrevious()){
            System.out.println(itr1.previous());
        }
        System.out.println("-------");
        ListIterator itr=list.listIterator(2);

         while (itr.hasNext()){
             System.out.println(itr.next());
         }

    }
}
 {
    public static void main(String[] args) {
        /*list iterator is used when we want to enumerate elements of list
        *it can be used on both Arraylist and Linkedlist
        * methods:
        * nest,hasNext,previous,hasPrevious
        * nextIndex,previousIndex,add,set,remove
        * */
        var list =new LinkedList<Double>();

        list.add(1.1);
        list.add(1.2);
        list.add(1.3);
        list.add(1.4);
        list.add(1.5);

        //reversing the list
        ListIterator itr1=list.listIterator(list.size());

        while (itr1.hasPrevious()){
            System.out.println(itr1.previous());
        }
        System.out.println("-------");
        ListIterator itr=list.listIterator(2);

         while (itr.hasNext()){
             System.out.println(itr.next());
         }

    }
}
